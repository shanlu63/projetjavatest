/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projetjavatest.view;

import com.mycompany.projetjavatest.DAO.TableDAO;
import com.mycompany.projetjavatest.dao.CommandDAO;
import com.mycompany.projetjavatest.dao.MenuDAO;

import com.mycompany.projetjavatest.domain.Table;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Container;

import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;

import javax.swing.SwingConstants;


/**
 *
 * @author shan
 */
public class GestionService1 extends javax.swing.JFrame {
     // Liste pour stocker les objets Table
    // Liste pour stocker les objets Table
    private List<Table> tableList;
    public int tableactual=0 ;
    public int statuactual=0 ;
    public int placeactual ;
    private JPanel commandPanel;
    public float totalToPay;
    private JTextField jTextFieldAmountDue;


   
    /**
     * Creates new form GestionService1
     */
    /**
     * Creates new form GestionService1
     */
    public GestionService1() {
          // Initialize tableList first
        TableDAO tableDAO = new TableDAO("table.txt"); // Créer une instance de TableDAO avec le chemin du fichier
        tableList = tableDAO.initializeTableList();
        CommandDAO commandDAO = new CommandDAO();

        initComponents();
         jPanelPlan.setVisible(true);//afficher le panel de plan de menu de restaurant
        jPanelStatusdetable.setVisible(false);//le panel de status de table est invisible
     
         jPanelstatus.setVisible(false);//afficher la panel de reservation
         jScrollPaneMenu.setVisible(false);//cacher la panel de menu
         jPanelcommandcomfirm.setVisible(false);//cacher la panel de command
         jScrollPaneCommand.setVisible(false);//cacher la soroll panel de command
         jPanelchoixpayement.setVisible(false);//cacher
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanelLegende = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabelPlandurestarant = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanelPlan = new javax.swing.JPanel();
        jScrollPaneMenu = new javax.swing.JScrollPane();
        jScrollPaneCommand = new javax.swing.JScrollPane();
        jPanelMenudugestion = new javax.swing.JPanel();
        jButtonQuitter = new javax.swing.JButton();
        jButtonCommender = new javax.swing.JButton();
        jButtonAddtion = new javax.swing.JButton();
        jButtonStatus = new javax.swing.JButton();
        jLabelMenu = new javax.swing.JLabel();
        jButtonReservation = new javax.swing.JButton();
        jPanelStatusdetable = new javax.swing.JPanel();
        jPanelcommandcomfirm = new javax.swing.JPanel();
        jButtonannuler = new javax.swing.JButton();
        jButtoncomfirm = new javax.swing.JButton();
        jPanelstatus = new javax.swing.JPanel();
        jLabelIDtable = new javax.swing.JLabel();
        jPanelReservation = new javax.swing.JPanel();
        jPanelchoixletemp = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButtonValierRDV = new javax.swing.JButton();
        jButtonAnnulerRDV = new javax.swing.JButton();
        jTextNom = new javax.swing.JTextField();
        jTextTelephone = new javax.swing.JTextField();
        jFormattedDate = new javax.swing.JFormattedTextField();
        jPanelchoixpayement = new javax.swing.JPanel();
        jButtonEnespece = new javax.swing.JButton();
        jButtonPayCB = new javax.swing.JButton();
        jButtonFacture = new javax.swing.JButton();
        jButtonDeconnexion = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(0, 740));
        setSize(new java.awt.Dimension(800, 600));

        jPanelLegende.setBackground(new java.awt.Color(204, 255, 204));

        jPanel5.setBackground(java.awt.Color.cyan);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 17, Short.MAX_VALUE)
        );

        jLabel1.setText("diponible");

        jPanel6.setBackground(java.awt.Color.yellow);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 17, Short.MAX_VALUE)
        );

        jLabel2.setText("réservé");

        jPanel7.setBackground(java.awt.Color.red);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 17, Short.MAX_VALUE)
        );

        jLabel3.setText("occupé");

        jLabelPlandurestarant.setText("Plan du restarant");

        javax.swing.GroupLayout jPanelLegendeLayout = new javax.swing.GroupLayout(jPanelLegende);
        jPanelLegende.setLayout(jPanelLegendeLayout);
        jPanelLegendeLayout.setHorizontalGroup(
            jPanelLegendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLegendeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelPlandurestarant, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 230, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(42, 42, 42))
        );
        jPanelLegendeLayout.setVerticalGroup(
            jPanelLegendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLegendeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelLegendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addGroup(jPanelLegendeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabelPlandurestarant, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1)))
                .addGap(21, 21, 21))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));
        jPanel3.setMinimumSize(new java.awt.Dimension(100, 790));
        jPanel3.setPreferredSize(new java.awt.Dimension(1500, 790));

        jPanelPlan.setBackground(new java.awt.Color(255, 204, 204));
        jPanelPlan.setMaximumSize(new java.awt.Dimension(500, 650));
        jPanelPlan.setMinimumSize(new java.awt.Dimension(500, 650));
        jPanelPlan.setPreferredSize(new java.awt.Dimension(300, 700));

        javax.swing.GroupLayout jPanelPlanLayout = new javax.swing.GroupLayout(jPanelPlan);
        jPanelPlan.setLayout(jPanelPlanLayout);
        jPanelPlanLayout.setHorizontalGroup(
            jPanelPlanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelPlanLayout.setVerticalGroup(
            jPanelPlanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jScrollPaneMenu.setBackground(new java.awt.Color(153, 255, 102));
        jScrollPaneMenu.setForeground(new java.awt.Color(102, 255, 102));
        jScrollPaneMenu.setMaximumSize(new java.awt.Dimension(450, 650));
        jScrollPaneMenu.setMinimumSize(new java.awt.Dimension(100, 650));
        jScrollPaneMenu.setName(""); // NOI18N
        jScrollPaneMenu.setPreferredSize(new java.awt.Dimension(350, 650));

        jScrollPaneCommand.setBackground(new java.awt.Color(102, 255, 102));
        jScrollPaneCommand.setForeground(new java.awt.Color(102, 255, 102));
        jScrollPaneCommand.setMaximumSize(new java.awt.Dimension(650, 650));
        jScrollPaneCommand.setMinimumSize(new java.awt.Dimension(270, 650));
        jScrollPaneCommand.setPreferredSize(new java.awt.Dimension(100, 650));

        jPanelMenudugestion.setBackground(new java.awt.Color(204, 255, 255));
        jPanelMenudugestion.setPreferredSize(new java.awt.Dimension(200, 249));

        jButtonQuitter.setText("Quitter");
        jButtonQuitter.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQuitterActionPerformed(evt);
            }
        });

        jButtonCommender.setText("Commander");
        jButtonCommender.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonCommender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCommenderActionPerformed(evt);
            }
        });

        jButtonAddtion.setText("l'addition");
        jButtonAddtion.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonAddtion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddtionActionPerformed(evt);
            }
        });

        jButtonStatus.setText("Status de table");
        jButtonStatus.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStatusActionPerformed(evt);
            }
        });

        jLabelMenu.setText("Menu du gestion");

        jButtonReservation.setText("Réservation");
        jButtonReservation.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReservationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelMenudugestionLayout = new javax.swing.GroupLayout(jPanelMenudugestion);
        jPanelMenudugestion.setLayout(jPanelMenudugestionLayout);
        jPanelMenudugestionLayout.setHorizontalGroup(
            jPanelMenudugestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMenudugestionLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanelMenudugestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonQuitter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelMenudugestionLayout.createSequentialGroup()
                        .addGroup(jPanelMenudugestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonCommender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelMenudugestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonAddtion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonReservation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMenudugestionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelMenu)
                .addGap(112, 112, 112))
        );
        jPanelMenudugestionLayout.setVerticalGroup(
            jPanelMenudugestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMenudugestionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelMenu)
                .addGap(18, 18, 18)
                .addGroup(jPanelMenudugestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMenudugestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCommender, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAddtion, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButtonQuitter, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );

        jPanelStatusdetable.setBackground(new java.awt.Color(255, 255, 51));
        jPanelStatusdetable.setMaximumSize(new java.awt.Dimension(100, 300));
        jPanelStatusdetable.setMinimumSize(new java.awt.Dimension(100, 300));
        jPanelStatusdetable.setPreferredSize(new java.awt.Dimension(100, 300));

        javax.swing.GroupLayout jPanelStatusdetableLayout = new javax.swing.GroupLayout(jPanelStatusdetable);
        jPanelStatusdetable.setLayout(jPanelStatusdetableLayout);
        jPanelStatusdetableLayout.setHorizontalGroup(
            jPanelStatusdetableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelStatusdetableLayout.setVerticalGroup(
            jPanelStatusdetableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanelcommandcomfirm.setBackground(new java.awt.Color(204, 255, 204));

        jButtonannuler.setText("Annuler Comm.");
        jButtonannuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonannulerActionPerformed(evt);
            }
        });

        jButtoncomfirm.setText("Valider Comm.");
        jButtoncomfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtoncomfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelcommandcomfirmLayout = new javax.swing.GroupLayout(jPanelcommandcomfirm);
        jPanelcommandcomfirm.setLayout(jPanelcommandcomfirmLayout);
        jPanelcommandcomfirmLayout.setHorizontalGroup(
            jPanelcommandcomfirmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelcommandcomfirmLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jButtonannuler, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtoncomfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelcommandcomfirmLayout.setVerticalGroup(
            jPanelcommandcomfirmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelcommandcomfirmLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelcommandcomfirmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonannuler)
                    .addComponent(jButtoncomfirm))
                .addGap(18, 18, 18))
        );

        jPanelstatus.setBackground(new java.awt.Color(255, 153, 153));
        jPanelstatus.setMaximumSize(new java.awt.Dimension(300, 300));
        jPanelstatus.setMinimumSize(new java.awt.Dimension(300, 252));
        jPanelstatus.setPreferredSize(new java.awt.Dimension(300, 252));
        jPanelstatus.setRequestFocusEnabled(false);

        jLabelIDtable.setText("Reservation :");

        jPanelReservation.setBackground(new java.awt.Color(255, 204, 153));
        jPanelReservation.setMaximumSize(new java.awt.Dimension(300, 200));
        jPanelReservation.setMinimumSize(new java.awt.Dimension(300, 200));

        javax.swing.GroupLayout jPanelReservationLayout = new javax.swing.GroupLayout(jPanelReservation);
        jPanelReservation.setLayout(jPanelReservationLayout);
        jPanelReservationLayout.setHorizontalGroup(
            jPanelReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelReservationLayout.setVerticalGroup(
            jPanelReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel4.setText("Nom de réservateur");

        jLabel5.setText("Numéro de téléphone ");

        jLabel6.setText("Date et Horaire");

        jButtonValierRDV.setText("ValiderRDV");
        jButtonValierRDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValierRDVActionPerformed(evt);
            }
        });

        jButtonAnnulerRDV.setText("Annuler RDV");
        jButtonAnnulerRDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerRDVActionPerformed(evt);
            }
        });

        jTextNom.setText("nom");

        jFormattedDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
            new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("MM/dd/yy-HH:mm"))
        ));
        jFormattedDate.setText("MM/dd/yy-HH:mm");

        javax.swing.GroupLayout jPanelchoixletempLayout = new javax.swing.GroupLayout(jPanelchoixletemp);
        jPanelchoixletemp.setLayout(jPanelchoixletempLayout);
        jPanelchoixletempLayout.setHorizontalGroup(
            jPanelchoixletempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelchoixletempLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelchoixletempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelchoixletempLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jTextNom))
                    .addGroup(jPanelchoixletempLayout.createSequentialGroup()
                        .addGroup(jPanelchoixletempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelchoixletempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jFormattedDate)
                            .addComponent(jTextTelephone)))
                    .addGroup(jPanelchoixletempLayout.createSequentialGroup()
                        .addComponent(jButtonAnnulerRDV)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonValierRDV, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelchoixletempLayout.setVerticalGroup(
            jPanelchoixletempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelchoixletempLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelchoixletempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelchoixletempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextTelephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelchoixletempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jFormattedDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelchoixletempLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAnnulerRDV)
                    .addComponent(jButtonValierRDV))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelstatusLayout = new javax.swing.GroupLayout(jPanelstatus);
        jPanelstatus.setLayout(jPanelstatusLayout);
        jPanelstatusLayout.setHorizontalGroup(
            jPanelstatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelstatusLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelIDtable)
                .addGap(213, 213, 213))
            .addGroup(jPanelstatusLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanelstatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelchoixletemp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 27, Short.MAX_VALUE))
        );
        jPanelstatusLayout.setVerticalGroup(
            jPanelstatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelstatusLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelIDtable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelchoixletemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanelchoixpayement.setBackground(new java.awt.Color(255, 153, 0));

        jButtonEnespece.setText("En espèse");
        jButtonEnespece.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnespeceActionPerformed(evt);
            }
        });

        jButtonPayCB.setText("Carte Bleue");
        jButtonPayCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPayCBActionPerformed(evt);
            }
        });

        jButtonFacture.setText("Facture");

        javax.swing.GroupLayout jPanelchoixpayementLayout = new javax.swing.GroupLayout(jPanelchoixpayement);
        jPanelchoixpayement.setLayout(jPanelchoixpayementLayout);
        jPanelchoixpayementLayout.setHorizontalGroup(
            jPanelchoixpayementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelchoixpayementLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanelchoixpayementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonFacture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelchoixpayementLayout.createSequentialGroup()
                        .addComponent(jButtonEnespece, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonPayCB, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelchoixpayementLayout.setVerticalGroup(
            jPanelchoixpayementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelchoixpayementLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelchoixpayementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonPayCB, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jButtonEnespece, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFacture, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonDeconnexion.setText("Déconnexion");
        jButtonDeconnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeconnexionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanelPlan, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPaneMenu, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPaneCommand, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelStatusdetable, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                    .addComponent(jPanelcommandcomfirm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelstatus, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                    .addComponent(jPanelMenudugestion, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                    .addComponent(jPanelchoixpayement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jButtonDeconnexion, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButtonDeconnexion, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPaneCommand, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE)
                            .addComponent(jScrollPaneMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelPlan, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jPanelMenudugestion, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelStatusdetable, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelcommandcomfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanelstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelchoixpayement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 1514, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanelLegende, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(816, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jPanelLegende, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 804, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //action 1 : status de table ----------------start
    private void jButtonStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStatusActionPerformed
        // TODO add your handling code here:
        //affiche la status des table apres cliquer le boutton status de table
         // Affiche le status des tables
            displaytables();//afficher les tables dans le panel plan du restarant 
            jPanelPlan.setVisible(true);//afficher le plan du restaurant
            jPanelStatusdetable.setVisible(true);//cacher status de table est invisible
            jPanelstatus.setVisible(false);//cacher la panel de reservation
            jScrollPaneMenu.setVisible(false);//cacher
            jScrollPaneCommand.setVisible(false);//cacher
            jPanelcommandcomfirm.setVisible(false);//cacher
             jPanelchoixpayement.setVisible(false);//cacher
            
            
          
        }
        //action 1 : status de table ----------------finir
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new GestionService1().setVisible(true);
            }
        });
    }//GEN-LAST:event_jButtonStatusActionPerformed

    private void jButtonQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQuitterActionPerformed
        // TODO add your handling code here:
        this.dispose();
        choixInterface choixInterface = new choixInterface();
        choixInterface.setVisible(true);//quitter et aller le form de choix d'interface
       
    }//GEN-LAST:event_jButtonQuitterActionPerformed
//---------------fonction de afficher le panel de  reservation ---start
    private void jButtonReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReservationActionPerformed
        // TODO add your handling code here:
        //fonction pour cliquer le bouton de Reservation, affiche les bouton pour choisier les date
         jPanelPlan.setVisible(true);//afficher le plan du restaurant
         jScrollPaneMenu.setVisible(false);//cacher
         jScrollPaneCommand.setVisible(false);//cacher
         jPanelcommandcomfirm.setVisible(false);//cacher
          jPanelchoixpayement.setVisible(false);//cacher
          
          
         //jPanelReservation.setVisible(true);//afficher la panel de reservation de table
        jPanelstatus.setVisible(true);
        jPanelStatusdetable.setVisible(false);//status de table est invisible
        jPanelchoixletemp.setVisible(false);
         
         
        displaytables();//afficher les tables
        
         // Afficher la date et l'heure actuelles dans le jFormattedDate
        displayCurrentDateTime(); 
    }//GEN-LAST:event_jButtonReservationActionPerformed
    
    private void displayCurrentDateTime() {
    // Créer SimpleDateFormat et obtenir la date actuelle
        SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yy-HH:mm");
        Date currentDate = new Date();
        String dateString = dateFormat.format(currentDate);

        // Mettre à jour le texte du JLabel avec la date et l'heure actuelles
        jFormattedDate.setText( dateString);
    }

//************focntion de afficher le panel de reservation ---fin
    private void jButtonDeconnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeconnexionActionPerformed
        // TODO add your handling code here:
         this.dispose();//fermer l'application
          
        try {
            connexion connexion = new connexion();
            connexion.setVisible(true);//afficher le form connexion
             
        } catch (Exception ex) {
            Logger.getLogger(GestionService1.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButtonDeconnexionActionPerformed
   
    //-----------fin de button deconnexion
    
    
   //----reservation valiter-------------start
    private void jButtonValierRDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValierRDVActionPerformed
        // TODO add your handling code here:
        //get the donnee , date of reservation
        //Saisir les donnees de RDV
            // get nom et prenom de RDV
        // get le nom et telephone de reservaseur 
        String nomRDV ;
        String teleRDV ;
        String dateString = jFormattedDate.getText();
        SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yy-HH:mm");

        try {
            Date date = dateFormat.parse(dateString);
            nomRDV = jTextNom.getText();
            teleRDV = jTextTelephone.getText();
            if (date != null && nomRDV != null && !nomRDV.trim().isEmpty() && teleRDV != null && !teleRDV.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, nomRDV + "Selected Date and Time: " + dateString);
                System.out.println(nomRDV + " " + teleRDV + " " + dateString);

                TableDAO tableDAO = new TableDAO("table.txt");
                boolean updated = tableDAO.updateTable(tableactual, 2, placeactual, nomRDV, teleRDV, dateString);

                if (updated) {
                    tableList = tableDAO.initializeTableList();
                    displaytables(); 
                }
   
            }else{
                JOptionPane.showMessageDialog(this, "Veuillez saisir le nom et le contact de réservateur!!");
            }//fin if 
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Veuillez saisir la date correcte au format  MM/dd/yy-HH：mm");
        }
        statuactual = 2;
    }//GEN-LAST:event_jButtonValierRDVActionPerformed
//------------------fin de valider le RDV 
 //-----------------start de annuler le RDV
    private void jButtonAnnulerRDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerRDVActionPerformed
        // TODO add your handling code here:
        //cliquez ce bouton ensuite modifier le status de table , annuler le RDV
         TableDAO tableDAO = new TableDAO("table.txt");
         statuactual = 1;
         boolean annuler = tableDAO.updateTable(tableactual, statuactual, placeactual, null, null, null); // status 1: disponible

         if (annuler) {
             tableList = tableDAO.initializeTableList();
             displaytables();
         } 
         
    }//GEN-LAST:event_jButtonAnnulerRDVActionPerformed
//------------------fin de annuler le RDV
    
    //----------------start de commander
    private void jButtonCommenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCommenderActionPerformed
        // TODO add your handling code here:
              // set jScrollPaneCommand width 490
        adjustScrollPaneSize(jScrollPaneCommand, 490, jScrollPaneCommand.getHeight());
        
        commandPanel = new JPanel(new GridBagLayout());
        jScrollPaneCommand.setViewportView(commandPanel);
        jPanelPlan.setVisible(false);//cacher
        jPanelstatus.setVisible(false);//cacher
         jPanelchoixpayement.setVisible(false);//cacher
         
         
        jScrollPaneMenu.setVisible(true);//afficher le scrollpanel menu
        jPanelcommandcomfirm.setVisible(true);//afficher le panel de valider le  commend
        jScrollPaneCommand.setVisible(true);//afficher le scrollpanel commend
       
     // Effacer le contenu précédent du panneau de commande
      
    
    // Créer les contraintes pour GridBagLayout
        GridBagConstraints gbc = new GridBagConstraints();
   
    gbc.anchor = GridBagConstraints.WEST; // Alignement à gauche
    gbc.fill = GridBagConstraints.HORIZONTAL; // Pour que les composants utilisent toute la largeur disponible

    // Vérifier la condition de la table et afficher un message ou préparer la commande
    if (tableactual == 0 && statuactual==0) {//il faut choisir un talbe 
        // Afficher un message si la table n'est pas sélectionnée ou est occupée
        jPanelcommandcomfirm.setVisible(false);
         JOptionPane.showMessageDialog(this, "Vous devez choisir une table!");
        
    } else {
        jPanelcommandcomfirm.setVisible(true);
        // Permettre la commande
        // Afficher les données actuelles
         JOptionPane.showMessageDialog(this, "Veuillez cliquer pour demander un plate!");
        // Passer les composants nécessaires à MenuDAO
        MenuDAO menuDAO = new MenuDAO(commandPanel, jScrollPaneCommand);

        // Créer et afficher le panneau de menu
        JPanel menuPanel = menuDAO.createMenuPanel("Menu.txt");
        // Mettre menuPanel dans le jScrollPaneMenu
        jScrollPaneMenu.setViewportView(menuPanel);
       
    }

    // Revalidate and repaint to update the panel
    jPanelcommandcomfirm.revalidate();
    jPanelcommandcomfirm.repaint();
 
    }//GEN-LAST:event_jButtonCommenderActionPerformed

    private void jButtonannulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonannulerActionPerformed
        // TODO add your handling code here:
        //cliquez ce bouton pour annuler tout les commandes dans le panel de commend
        
            //nettroyer commandPanel tous les command
       commandPanel.removeAll();

       // mis en jour commandPanel
       commandPanel.revalidate();
       commandPanel.repaint();

    }//GEN-LAST:event_jButtonannulerActionPerformed

    private void jButtoncomfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtoncomfirmActionPerformed
        // TODO add your handling code here:
        // create CommandDAO 
    CommandDAO commandDAO = new CommandDAO(commandPanel);

    // save le command to command.txt
    commandDAO.saveCommandsToFile("command.txt",tableactual);

    JOptionPane.showMessageDialog(this, "Les commandes ont été confirmées et enregistrées .");
    if(statuactual !=3 ){
        statuactual =3;
        //midifier le status de talbe 
         TableDAO tableDAO = new TableDAO("table.txt");
                boolean updated = tableDAO.updateTablecommand(tableactual, statuactual, placeactual);

                if (updated) {
                    tableList = tableDAO.initializeTableList();
                    displaytables(); 
                }
        }

    }//GEN-LAST:event_jButtoncomfirmActionPerformed

    
    private void adjustScrollPaneSize(JScrollPane scrollPane, int newWidth, int newHeight){
    // get Dimension
      Dimension newSize = new Dimension(newWidth, newHeight);
    // creer Dimension object
    scrollPane.setPreferredSize(newSize);
    scrollPane.setMinimumSize(newSize);
    scrollPane.setSize(newSize);
    
    //
    scrollPane.revalidate();
    scrollPane.repaint();
    
    // 
    Container parent = scrollPane.getParent();
        if (parent != null) {
            parent.revalidate();
            parent.repaint();
        }
    }
    
    private void jButtonAddtionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddtionActionPerformed
        // TODO add your handling code here:
        //afficher tous les command et choisir un method de payment 
        // set jScrollPaneCommand width 750
        adjustScrollPaneSize(jScrollPaneCommand, 750, jScrollPaneCommand.getHeight());
        
       jPanelPlan.setVisible(false);//cacher
        jPanelcommandcomfirm.setVisible(false);//cacher
        jScrollPaneMenu.setVisible(false); //cacher
        jPanelstatus.setVisible(false); //cacher
        
        jPanelchoixpayement.setVisible(true);//afficher le panel de payement
        jScrollPaneCommand.setVisible(true);//afficher le panel de command
        jPanelStatusdetable.setVisible(true);//afficher le panel de table que vous choisissiez 
        
         if (tableactual == 0 && statuactual==0) {//il faut choisir un talbe 
             
             JOptionPane.showMessageDialog(this, "Vous devez choisir une table pour imprimer l'addition!");
             
        }
        // Initialize CommandDAO
        CommandDAO commandDAO = new CommandDAO();
        // Create the command panel with commands from the file
        JPanel commandPanel = commandDAO.createCommandPanel("command.txt",tableactual);
         // Set the command panel in JScrollPane
        jScrollPaneCommand.setViewportView(commandPanel);
         // Display total to pay
            totalToPay = commandDAO.getTotalToPay();
            JOptionPane.showMessageDialog(this, "Total à payer: " + String.format("%.2f €", totalToPay), "Total Amount", JOptionPane.INFORMATION_MESSAGE);
        
        
        
        
    }//GEN-LAST:event_jButtonAddtionActionPerformed

    private void jButtonPayCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPayCBActionPerformed
        // TODO add your handling code here:
        
        //payer par carte bleue , 100 % sans discount
         
        int option = JOptionPane.showConfirmDialog(
        this, 
        "Vous devez payer: " + String.format("%.2f €", totalToPay) + "\nVoulez-vous confirmer le paiement ?", 
        "Confirmation du paiement", 
        JOptionPane.OK_CANCEL_OPTION, 
        JOptionPane.INFORMATION_MESSAGE
        );
            // Handle user choice
        if (option == JOptionPane.OK_OPTION) {
            // User clicked "OK", proceed with payment
            JOptionPane.showMessageDialog(this, "Paiement confirmé !", "Confirmation", JOptionPane.INFORMATION_MESSAGE);

            // Initialize CommandDAO
            CommandDAO commandDAO = new CommandDAO();

            // Update payment status for the current table
            commandDAO.updatePaymentStatus("command.txt", tableactual);
            
            // Refresh the command panel to reflect the updated payment status
            JPanel commandPanel = commandDAO.createCommandPanel("command.txt", tableactual);
            jScrollPaneCommand.setViewportView(commandPanel);

            // Optional: Clear the current command panel if needed
            jScrollPaneCommand.revalidate();
            jScrollPaneCommand.repaint();
            
             TableDAO tableDAO = new TableDAO("table.txt");
             boolean updated = tableDAO.updateTable(tableactual, 1, placeactual,null,null,null);
              if (updated) {
                    tableList = tableDAO.initializeTableList();
                    displaytables(); 
                }

        // Save updated commands to file (Optional if updates are saved directly in updatePaymentStatus)
        // commandDAO.saveCommandsToFile("command.txt", tableactual);
            
        } else if (option == JOptionPane.CANCEL_OPTION) {
            // User clicked "Cancel", cancel payment
            JOptionPane.showMessageDialog(this, "Paiement annulé.", "Annulation", JOptionPane.INFORMATION_MESSAGE);
            // Implement cancellation logic here (e.g., go back to the previous state)
        }
        
        
    }//GEN-LAST:event_jButtonPayCBActionPerformed

    private void jButtonEnespeceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnespeceActionPerformed
        // TODO add your handling code here:
        //payement en espece , calculer  le monnaie
        // Récupérer le montant à payer (par exemple, depuis un champ texte)
        // Récupérer le montant à payer (par exemple, depuis un champ texte)
       // 
    if (jTextFieldAmountDue == null) {
        jTextFieldAmountDue = new JTextField();
    }

    // get totalprix
             //CommandDAO commandDAO = new CommandDAO();
           // totalToPay = commandDAO.getTotalToPay(); // utlise commandDAO pour un nouveau totalprix
            jTextFieldAmountDue.setText(String.valueOf(totalToPay));  //envoyer le prix dans le text 
            

               try {
                // Vérifier si le champ n'est pas vide et contient un nombre valide
                if (jTextFieldAmountDue.getText() != null && !jTextFieldAmountDue.getText().isEmpty()) {
                    double amountDue = totalToPay; // Montant à payer

                    // Demander à l'utilisateur de saisir le montant payé
                    String amountPaidStr = JOptionPane.showInputDialog(this, "Vous devez payer "+totalToPay+ "€ \n"+"Entrez le montant payé en espèces : ", "Paiement en espèces", JOptionPane.QUESTION_MESSAGE);

                    // Vérifier si l'utilisateur a entré une valeur ou annulé
                    if (amountPaidStr != null && !amountPaidStr.isEmpty()) {
                        double amountPaid = Double.parseDouble(amountPaidStr); // Convertir l'entrée en un nombre

                        // Calculer le monnaie
                        double change = amountPaid - amountDue;
                        String formattedChange = String.format("%.2f", change);

                        // Vérifier si le montant payé est suffisant
                        if (change < 0) {
                            JOptionPane.showMessageDialog(this, "Le montant payé est insuffisant !", "Erreur", JOptionPane.ERROR_MESSAGE);
                            return;
                        } else {
                            // Afficher le monnaie
                            JOptionPane.showMessageDialog(this, "Le monnaie à rendre est : " + formattedChange + " €", "Monnaie", JOptionPane.INFORMATION_MESSAGE);
                            
                             // Initialize CommandDAO
                            CommandDAO commandDAO = new CommandDAO();

                            // Update payment status for the current table
                            commandDAO.updatePaymentStatus("command.txt", tableactual);

                            // Refresh the command panel to reflect the updated payment status
                            JPanel commandPanel = commandDAO.createCommandPanel("command.txt", tableactual);
                            jScrollPaneCommand.setViewportView(commandPanel);

                            // Optional: Clear the current command panel if needed
                            jScrollPaneCommand.revalidate();
                            jScrollPaneCommand.repaint();

                             TableDAO tableDAO = new TableDAO("table.txt");
                             boolean updated = tableDAO.updateTable(tableactual, 1, placeactual,null,null,null);
                              if (updated) {
                                    tableList = tableDAO.initializeTableList();
                                    displaytables(); 
                                }

                        }
                    } else {
                        // L'utilisateur a annulé ou n'a rien entré
                        JOptionPane.showMessageDialog(this, "Le paiement a été annulé.", "Information", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Le champ du montant à payer est vide ou invalide.", "Erreur", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Veuillez entrer un montant valide.", "Erreur", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_jButtonEnespeceActionPerformed
  //-------------------------fin de command
    
    
  
    private void displaytables() {
        // Définir la disposition de jPanel1 en tant que GridBagLayout
        //
        jPanelPlan.removeAll();
        jPanelPlan.setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.fill = GridBagConstraints.NONE;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.gridx = 0;
        gbc.gridy = 0;
        int columns = 3; // Number of columns to display labels
        
      
        // Créer et ajouter des étiquettes (JLabels) à jPanel1 en fonction de la liste des tables
        for (Table table : tableList) {
        // Créer un nouveau JLabel avec le texte "Table i", le texte est centré horizontalement
            JLabel label = new JLabel(table.getStatusText(), SwingConstants.CENTER);

            // Définir la taille fixe de l'étiquette à 50x50 pixels
            label.setPreferredSize(new Dimension(100, 100));
            label.setMinimumSize(new Dimension(100, 100));
            label.setMaximumSize(new Dimension(100, 100));
          
            // Définir la couleur de fond de l'étiquette en fonction du statut de la table
            label.setOpaque(true);
            switch (table.getStatus()) {
                case 1: // Disponible
                    label.setBackground(Color.CYAN);
                    break;
                case 2: // Réservé
                    label.setBackground(Color.YELLOW);
                    break;
                case 3: // Occupé
                    label.setBackground(Color.RED);
                    break;
                default:
                    label.setBackground(Color.GRAY); // Couleur par défaut pour statut inconnu
                    break;
        }

        // Ajouter une bordure bleue à l'étiquette
        label.setBorder(BorderFactory.createLineBorder(Color.BLACK));
          // Ajouter l'étiquette à jPanel1
            jPanelPlan.add(label, gbc);

          // Ajouter un MouseListener pour gérer les clics
            label.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    //mise en jour les donnes actuel
                       tableactual = table.getIdtable();
                       statuactual = table.getStatus() ;
                       placeactual = table.getSeat();
                    // Check if jPanelStatusdetable is visible
                    if (jPanelStatusdetable.isVisible()) {
                        // Call the method to display details in panelStatusPourChequeTable
                        showDetailsInPanel(table); // afficher les details des que clic un table 
                    }
                    else if(jPanelReservation.isVisible()){
                        showDetailsInPanel(table); 
                        reservation(table);//  afficher les status des que clic un table 
                    }
                }
            });

            // Mettre à jour les contraintes de disposition pour la prochaine étiquette
             gbc.gridx++;
            if (gbc.gridx == columns) {
                gbc.gridx = 0;
                gbc.gridy++;
            }
        }

            // Revalider jPanel1 pour appliquer la nouvelle disposition des composants
            jPanelPlan.revalidate();
            // Repeindre jPanel1 pour s'assurer qu'il affiche les composants mis à jour
            jPanelPlan.repaint();
        }
    //------------statut de detail de table -------------
     private void showDetailsInPanel(Table table) {//fonction pour afficher la status de table quand tu cliquer le table
          jPanelStatusdetable.setLayout(new BorderLayout());
          Font font = new Font("Arial", Font.BOLD, 14);
           //System.out.println("Updating panel with details for: " + table.getStatusText()); // Debug line

            jPanelStatusdetable.removeAll();
            
            JLabel detailsLabel = new JLabel( table.getStatusTextdetail(), SwingConstants.CENTER);
            detailsLabel.setFont(font);

            jPanelStatusdetable.add(detailsLabel, BorderLayout.CENTER);

            jPanelStatusdetable.revalidate();
            jPanelStatusdetable.repaint();
        }
     //------------statut de detail de table ------------
     private void reservation(Table table){//verifier le status  de resertabtion
         
          jLabelIDtable.isVisible();
        // Set the layout of jPanelReservation to BorderLayout
            jPanelReservation.setLayout(new BorderLayout());

        // Create a new Font object
        Font font = new Font("Arial", Font.BOLD, 14);

        // Clear all components from jPanelReservation
        jPanelReservation.removeAll();

    // Get the status of the table
        int status = table.getStatus();
       
        //jPanelReservation.add(jLabelIDtable);
        // Check if the table is available
        if (status==1 ||status == 2) {//status 1 est disponble, 2 est deja reserve vous vouler modifier le date
            // Create a new JLabel for the table status with centered text
            JLabel jLabelStatus = new JLabel(table.getStatusText(), SwingConstants.CENTER);
            jLabelStatus.setFont(font);

            // Add the JLabel to the center of jPanelReservation
            jPanelReservation.add(jLabelStatus, BorderLayout.CENTER);
             jPanelchoixletemp.setVisible(true);
             
             
             
            
        }else{
            JLabel jLabelStatus = new JLabel(table.getStatusText(), SwingConstants.CENTER);
            jLabelStatus.setFont(font);

            // Add the JLabel to the center of jPanelReservation
            jPanelReservation.add(jLabelStatus, BorderLayout.CENTER);
            jPanelchoixletemp.setVisible(false);
        
        }

        // Refresh the jPanelReservation to reflect changes
        jPanelReservation.revalidate();
        jPanelReservation.repaint();
     }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddtion;
    private javax.swing.JButton jButtonAnnulerRDV;
    private javax.swing.JButton jButtonCommender;
    private javax.swing.JButton jButtonDeconnexion;
    private javax.swing.JButton jButtonEnespece;
    private javax.swing.JButton jButtonFacture;
    private javax.swing.JButton jButtonPayCB;
    private javax.swing.JButton jButtonQuitter;
    private javax.swing.JButton jButtonReservation;
    private javax.swing.JButton jButtonStatus;
    private javax.swing.JButton jButtonValierRDV;
    private javax.swing.JButton jButtonannuler;
    private javax.swing.JButton jButtoncomfirm;
    private javax.swing.JFormattedTextField jFormattedDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelIDtable;
    private javax.swing.JLabel jLabelMenu;
    private javax.swing.JLabel jLabelPlandurestarant;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanelLegende;
    private javax.swing.JPanel jPanelMenudugestion;
    private javax.swing.JPanel jPanelPlan;
    private javax.swing.JPanel jPanelReservation;
    private javax.swing.JPanel jPanelStatusdetable;
    private javax.swing.JPanel jPanelchoixletemp;
    private javax.swing.JPanel jPanelchoixpayement;
    private javax.swing.JPanel jPanelcommandcomfirm;
    private javax.swing.JPanel jPanelstatus;
    private javax.swing.JScrollPane jScrollPaneCommand;
    private javax.swing.JScrollPane jScrollPaneMenu;
    private javax.swing.JTextField jTextNom;
    private javax.swing.JTextField jTextTelephone;
    // End of variables declaration//GEN-END:variables
}
